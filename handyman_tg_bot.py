import math

import requests
import telebot
import time
from telebot import types
from googletrans import Translator

BOT_TOKEN = '6146451826:AAErL9lZgotF3XcC69rl2QXA7ksSUKI-oUs'  # –¢–æ–∫–µ–Ω –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

TIMEOUT_CONNECTION = 5  # –¢–∞–π–º–∞—É—Ç –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è

# –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
START_MESSAGE = """–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –Ω–∞ –≤—Å–µ —Ä—É–∫–∏!"""

bd = [{'user_id': '0', 'state': 'default'}]


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π-–∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['start'])
def send_start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üí¨ –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫')
    item2 = types.KeyboardButton('üî¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä')
    item3 = types.KeyboardButton('‚òÅ –ü–æ–≥–æ–¥–∞')
    item4 = types.KeyboardButton('üê∏ –ú–µ–º—ã')
    item5 = types.KeyboardButton('‚Ñπ –ò–Ω—Ñ–æ')

    markup.add(item1, item2, item3, item4, item5)

    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç! –ß–µ–º —Ç–µ–±–µ –ø–æ–º–æ—á—å?', reply_markup=markup)

    already_have = False
    for user in bd:
        if user['user_id'] == message.chat.id:
            already_have = True
            user['state'] = 'default'

    if not already_have:
        bd.append({'user_id': message.chat.id, 'state': 'default'})
    print(bd)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def bot_message(message):
    item_back = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')
    item1 = types.KeyboardButton('üí¨ –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫')
    item2 = types.KeyboardButton('üî¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä')
    item3 = types.KeyboardButton('‚òÅ –ü–æ–≥–æ–¥–∞')
    item4 = types.KeyboardButton('üê∏ –ú–µ–º—ã')
    item5 = types.KeyboardButton('‚Ñπ –ò–Ω—Ñ–æ')
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    for i in bd:
        if i['user_id'] == message.chat.id:
            user = i

    if message.chat.type == 'private':
        if message.text == 'üí¨ –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫':
            markup.add(item_back, item5)
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏', reply_markup=markup)
            user['state'] = 'translate'

        elif message.text == 'üî¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä':
            markup.add(item_back, item5)
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—á–∏—Ç–∞—Ç—å', reply_markup=markup)
            user['state'] = 'calculate'

        elif message.text == '‚òÅ –ü–æ–≥–æ–¥–∞':
            markup.add(item_back, item5)
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É', reply_markup=markup)
            user['state'] = 'weather'

        elif message.text == 'üê∏ –ú–µ–º—ã':
            markup.add(item_back, item5)
            bot.send_message(message.chat.id, 'üê∏ –ú–µ–º—ã', reply_markup=markup)
            user['state'] = 'memes'

        elif message.text == '‚Ñπ –ò–Ω—Ñ–æ':
            if user['state'] == 'default':
                bot.send_message(message.chat.id, '–ê–≤—Ç–æ—Ä—ã –±–æ—Ç–∞: \n@kuuorti \n@lenkinmax')
            elif user['state'] == 'calculate':
                bot.send_message(message.chat.id, '–í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –±–∞–∑–æ–≤—ã–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏ \n\n–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∫–æ–±–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –≤–∞–º –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è')
            elif user['state'] == 'translate':
                bot.send_message(message.chat.id, '–í –±–æ—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ –¥–≤–∞ —è–∑—ã–∫–∞: RU, EN \n\n–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —è–∑—ã–∫ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø–µ—Ä–µ–≤–æ–¥')
            elif user['state'] == 'weather':
                bot.send_message(message.chat.id, '–ë–æ—Ç –∑–Ω–∞–µ—Ç –ø–æ–≥–æ–¥—É –≤–æ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–∞—Ö –º–∏—Ä–∞, \n\n–ù–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤ –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–∏—Ä–∏–ª–ª–∏—Ü—ã')


        elif message.text == 'üîô –ù–∞–∑–∞–¥':
            markup.add(item1, item2, item3, item4, item5)
            bot.send_message(message.chat.id, 'üîô –ù–∞–∑–∞–¥', reply_markup=markup)
            user['state'] = 'default'

        else:
            if user['state'] == 'calculate':
                calculator(message)
            elif user['state'] == 'translate':
                translator(message)
            elif user['state'] == 'weather':
                weather(message)

# –ø–æ–≥–æ–¥–∞
def weather(message):
    weather_api_key = '54e6869ab9c8a14b92e5ada3bbd43ee6'
    try:
        response = requests.get(f"http://api.openweathermap.org/data/2.5/weather?q={message.text}&lang=ru&units=metric&appid={weather_api_key}")
        data = response.json()

        city = data["name"]
        cur_temp = data["main"]["temp"]
        humidity = data["main"]["humidity"]
        pressure = data["main"]["pressure"]
        wind = data["wind"]["speed"]
        bot.send_message(message.chat.id, f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_temp}¬∞C\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {math.ceil(pressure/1.333)} –º–º.—Ä—Ç.—Å—Ç\n–í–µ—Ç–µ—Ä: {wind} –º/—Å \n–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!")
    except:
        bot.send_message(message.chat.id, '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!')


# –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫
def translator(message):
    translator = Translator()

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ –≤–≤–æ–¥–∞.
    lang = translator.detect(message.text)
    lang = lang.lang

    # –ï—Å–ª–∏ –≤–≤–æ–¥ –ø–æ —Ä—É—Å—Å–∫–∏, —Ç–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
    if lang == 'ru':
        send = translator.translate(message.text)
        bot.send_message(message.chat.id, send.text)

    # –ò–Ω–∞—á–µ –¥—Ä—É–≥–æ–π —è–∑—ã–∫ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π {dest='ru'}.
    else:
        send = translator.translate(message.text, dest='ru')
        bot.send_message(message.chat.id, send.text)


# –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
def calculator(message):
    msg = None

    user_message = message.text.lower()
    user_message = user_message.lstrip()
    user_message = user_message.rstrip()

    try:
        answer = str(eval(user_message.replace(' ', '')))
        msg = bot.send_message(message.chat.id, user_message.replace(' ', '') + ' = ' + answer)
    except SyntaxError:
        msg = bot.send_message(message.chat.id,
                               '–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫. \n–ò—Å—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫—É –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞')
    except NameError:
        msg = bot.send_message(message.chat.id,
                               '–ü–µ—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç–µ —è –Ω–µ –∑–Ω–∞—é. \n–ò—Å—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫—É –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞')
    except TypeError:
        msg = bot.send_message(message.chat.id,
                               '–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –≤ –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ—à–∏–±–∫–∞ —Ç–∏–ø–æ–≤. \n–ò—Å—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫—É –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞')
    except ZeroDivisionError:
        msg = bot.send_message(message.chat.id,
                               '–í –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ –≤—ã –¥–µ–ª–∏—Ç–µ –Ω–∞ –Ω–æ–ª—å. \n–ò—Å—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫—É –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞')


# –í—Ö–æ–¥ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É
if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True)
        except Exception as e:
            print('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ %s —Å–µ–∫.' % TIMEOUT_CONNECTION)
            time.sleep(TIMEOUT_CONNECTION)
